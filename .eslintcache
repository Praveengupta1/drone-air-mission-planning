[{"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\index.js":"1","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\App.js":"2","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reportWebVitals.js":"3","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Home.jsx":"4","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Map.jsx":"5","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\nav\\Nav.jsx":"6","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\CreatePlan.jsx":"7","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Util.jsx":"8","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\rootReducer.js":"9","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\plans.js":"10","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\action-types\\createPlan.js":"11","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\CreatePlan.jsx":"12","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\actions\\createPlan.js":"13","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\UtilMap.jsx":"14","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\ViewPlans.jsx":"15","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\ViewPlans.jsx":"16","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Button.jsx":"17"},{"size":783,"mtime":1611403526617,"results":"18","hashOfConfig":"19"},{"size":625,"mtime":1611461050326,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1083,"mtime":1611502710601,"results":"22","hashOfConfig":"19"},{"size":267,"mtime":1611339566668,"results":"23","hashOfConfig":"19"},{"size":502,"mtime":1611503515899,"results":"24","hashOfConfig":"19"},{"size":4803,"mtime":1611461842750,"results":"25","hashOfConfig":"19"},{"size":5096,"mtime":1611421707953,"results":"26","hashOfConfig":"19"},{"size":137,"mtime":1611403369905,"results":"27","hashOfConfig":"19"},{"size":903,"mtime":1611420806366,"results":"28","hashOfConfig":"19"},{"size":39,"mtime":1611403830795,"results":"29","hashOfConfig":"19"},{"size":460,"mtime":1611404911215,"results":"30","hashOfConfig":"19"},{"size":212,"mtime":1611404931481,"results":"31","hashOfConfig":"19"},{"size":1484,"mtime":1611464723289,"results":"32","hashOfConfig":"19"},{"size":236,"mtime":1611461013657,"results":"33","hashOfConfig":"19"},{"size":5064,"mtime":1611465678561,"results":"34","hashOfConfig":"19"},{"size":185,"mtime":1611502037585,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h2p1lr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\index.js",[],["74","75"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\App.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reportWebVitals.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Home.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Map.jsx",[],["76","77"],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\nav\\Nav.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\CreatePlan.jsx",["78","79"],"import React,{useEffect} from 'react'\r\nimport { useState } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport {GeolocateControl,FullscreenControl,NavigationControl} from \"react-map-gl\";\r\nimport {Marker} from \"react-map-gl\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport GetSelectedOperation from \"./Util\";\r\nimport GetCurrentFeature from \"./UtilMap\"\r\n\r\nconst useStyles = makeStyles({\r\n    operationContainer:{\r\n        position:\"absolute\",\r\n        top:0,\r\n        left:0,\r\n        backgroundColor:\"white\",\r\n        color:\"black\",\r\n        margin:5,\r\n        padding:5,\r\n        width:\"300px\",\r\n        height:300,\r\n        zIndex:1000,\r\n        boxShadow:'0px 0px 30px lightgreen',\r\n        border:\"4px solid lightgreen\"\r\n    },\r\n    label:{\r\n        padding:5\r\n    }\r\n})\r\nfunction CreatePlan(props) {\r\n    const {store,addSource} = props;\r\n    const [viewport, setViewport] = useState({\r\n      width: \"100%\",\r\n      height: 500,\r\n      latitude: 26.127565,\r\n      longitude: 85.420509,\r\n      zoom: 8\r\n    });\r\n\r\n    const [operation, setOperation] = useState(\"select\");\r\n    const [clickedLngLat, setClickedLngLat] = useState(null);\r\n    const [curData, setCurData] = useState(null);\r\n    const [tmpData, setTmpData] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(curData){\r\n            addSource(curData,operation)\r\n        }\r\n    },[curData]);\r\n    return (\r\n        <div className=\"root-container\">\r\n            <ReactMapGL\r\n                onClick={(e)=>{\r\n                    setClickedLngLat(e.lngLat);\r\n                }}\r\n                {...viewport}\r\n                onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                mapboxApiAccessToken={process.env.REACT_APP_MAP_BOX_TOKEN}\r\n                mapStyle={\"mapbox://styles/rafilos556/ckhrp0auk0ol119s02qvctvh4\"}\r\n            >\r\n                \r\n                <div style={{position: 'absolute', right: 10,bottom:10}}>\r\n                    <GeolocateControl />\r\n                    <FullscreenControl />\r\n                    <NavigationControl />\r\n                </div>\r\n\r\n                {/* display current longitude and latitude */}\r\n                <div style={{position: 'absolute', left: 10,bottom:30,padding:5,backgroundColor:\"white\",color:\"black\"}}>\r\n                    <b>lng: </b>{viewport.longitude} <br/>\r\n                    <b>lat: </b>{viewport.latitude}\r\n                </div>\r\n\r\n                {\r\n                    (clickedLngLat)&&\r\n                    <Marker offsetLeft={-20} offsetTop={-25} longitude={clickedLngLat[0]} latitude={clickedLngLat[1]}>\r\n                        <AddLocationIcon className=\"add_location_icon\" color=\"secondary\"/>\r\n                    </Marker>\r\n                }\r\n                <GetCurrentFeature operation={operation} data={tmpData}/>\r\n            </ReactMapGL>\r\n            \r\n            <Operations \r\n                operation={operation} \r\n                getOperation={setOperation}\r\n                flushData={(e)=>{\r\n                    setTmpData(null);\r\n                    setCurData(null);\r\n                    setClickedLngLat(null)\r\n                }}\r\n                mapProps={{\r\n                    clickedLngLat:clickedLngLat,\r\n                    setClickedLngLat:setClickedLngLat,\r\n                    setCurData:setCurData,\r\n                    curData:curData,\r\n                    tmpData:tmpData,\r\n                    setTmpData:setTmpData\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Operations=({getOperation,operation,mapProps,flushData})=>{\r\n    const classes = useStyles();\r\n    return <Card className={classes.operationContainer}>\r\n        <FormControl >\r\n        <InputLabel className={`${classes.label}`}>Add</InputLabel>\r\n        <Select \r\n            value={operation}\r\n            onChange={(e)=>{\r\n                getOperation(e.target.value);\r\n                flushData();\r\n            }} \r\n        >\r\n            <MenuItem value=\"select\">Select</MenuItem>\r\n            <MenuItem value=\"line\">Line</MenuItem>\r\n            <MenuItem value=\"point\">Point</MenuItem>\r\n            <MenuItem value=\"circle\">Circle</MenuItem>\r\n            <MenuItem value=\"polygon\">Polygon</MenuItem>\r\n        </Select>\r\n    </FormControl>\r\n    <hr/>\r\n    {operation === \"select\" && <p className=\"muted__text\">Please select any operation</p>}\r\n\r\n        <GetSelectedOperation operation={operation} mapProps={mapProps}/>\r\n    </Card>\r\n}\r\nexport default CreatePlan\r\n","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\Util.jsx",["80"],"import React,{useEffect} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n    addButton:{\r\n        position:\"absolute\",\r\n        bottom:4,\r\n        left:4\r\n    },\r\n    uploadButton:{\r\n        position:\"absolute\",\r\n        bottom:4,\r\n        right:4\r\n    }\r\n});\r\nconst GetSelectedOperation=({operation,mapProps})=>{\r\n    switch(operation){\r\n        case \"point\":\r\n            return <PointOperation mapProps={mapProps}/>;\r\n\r\n        case 'line':\r\n            return <LineOperation mapProps={mapProps}/>;\r\n            \r\n        case 'circle':\r\n            return <CircleOperation mapProps={mapProps}/>;\r\n        default : return null;\r\n    }\r\n}\r\n\r\nconst CircleOperation=({mapProps})=>{\r\n    const classes = useStyles();\r\n    const [radius, setRadius] = React.useState(20);\r\n    useEffect(()=>{\r\n        if(mapProps && mapProps.clickedLngLat){\r\n            mapProps.setTmpData({\r\n                cords:mapProps.clickedLngLat,\r\n                radius:radius\r\n            });\r\n        }\r\n    },[mapProps.clickedLngLat,radius]);\r\n\r\n    return <div>\r\n        <p className=\"muted__text\">Click any where on the map to create add circle center point</p>\r\n        {\r\n            (mapProps&&mapProps.clickedLngLat)&&<>\r\n                <hr/>\r\n                <p>Your selected point</p>\r\n                <ul>\r\n                    <li>\r\n                        <b>Lon:</b> {mapProps.clickedLngLat[0]}\r\n                    </li>\r\n                    <li>\r\n                        <b>Lat:</b> {mapProps.clickedLngLat[1]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        }\r\n        <div className=\"input_radius_container\">\r\n            <p>Radius</p>\r\n            <input \r\n                value={radius}\r\n                onChange={(e)=>setRadius(e.target.value)}\r\n                type=\"number\"\r\n                placeholder=\"radius in KM\"\r\n            />\r\n            <p>KM</p>\r\n        </div>\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps||!mapProps.clickedLngLat}\r\n            className={classes.addButton}\r\n            onClick={(e)=>{\r\n                mapProps.setCurData({\r\n                    cords:mapProps.clickedLngLat,\r\n                    radius:radius\r\n                });\r\n                mapProps.setClickedLngLat(null);\r\n                mapProps.setTmpData(null);\r\n            }}\r\n            >\r\n            Add Circle \r\n        </Button>\r\n    </div>\r\n}\r\nconst LineOperation=({mapProps})=>{\r\n    const classes = useStyles();\r\n    return <div>\r\n        <p className=\"muted__text\">Click any where on the map to create add line point</p>\r\n\r\n        {\r\n            (mapProps&&mapProps.clickedLngLat)&&<>\r\n                <hr/>\r\n                <p>Your selected point</p>\r\n                <ul>\r\n                    <li>\r\n                        <b>Lon:</b> {mapProps.clickedLngLat[0]}\r\n                    </li>\r\n                    <li>\r\n                        <b>Lat:</b> {mapProps.clickedLngLat[1]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        }\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps||!mapProps.clickedLngLat}\r\n            className={classes.addButton}\r\n            onClick={(e)=>{\r\n                let data = mapProps.tmpData || [mapProps.clickedLngLat];\r\n                mapProps.setTmpData([...data,mapProps.clickedLngLat]);\r\n                mapProps.setClickedLngLat(null);\r\n            }}\r\n            >\r\n            Add point\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps.tmpData}\r\n            className={classes.uploadButton}\r\n            onClick={(e)=>{\r\n                mapProps.setCurData(mapProps.tmpData);\r\n                mapProps.setClickedLngLat(null);\r\n                mapProps.setTmpData(null);\r\n            }}\r\n            >\r\n            Add Line \r\n        </Button>\r\n    </div>\r\n}\r\n\r\nconst PointOperation=({mapProps})=>{\r\n    const classes = useStyles();\r\n    return <div>\r\n        <p className=\"muted__text\">Click any where on the map to create point</p>\r\n\r\n        {\r\n            (mapProps&&mapProps.clickedLngLat)&&<>\r\n                <hr/>\r\n                <p>Your selected point</p>\r\n                <ul>\r\n                    <li>\r\n                        <b>Lon:</b> {mapProps.clickedLngLat[0]}\r\n                    </li>\r\n                    <li>\r\n                        <b>Lat:</b> {mapProps.clickedLngLat[1]}\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        }\r\n        <Button variant=\"contained\" color=\"primary\" \r\n            size=\"small\" disabled={!mapProps||!mapProps.clickedLngLat}\r\n            className={classes.addButton}\r\n            onClick={(e)=>{\r\n                mapProps.setCurData(mapProps.clickedLngLat);\r\n                mapProps.setClickedLngLat(null);\r\n            }}\r\n            >\r\n            Add point\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default GetSelectedOperation;","C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\rootReducer.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\reducers\\plans.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\action-types\\createPlan.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\CreatePlan.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\actions\\actions\\createPlan.js",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\UtilMap.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\containers\\map\\ViewPlans.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\map\\ViewPlans.jsx",[],"C:\\Users\\Rahul kumar\\desktop\\Projects\\drone-route-planning\\src\\components\\Button.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":36,"column":12,"nodeType":"89","messageId":"90","endLine":36,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":54,"column":7,"nodeType":"93","endLine":54,"endColumn":16,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":41,"column":7,"nodeType":"93","endLine":41,"endColumn":38,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addSource' and 'operation'. Either include them or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'mapProps'. Either include it or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [addSource, curData, operation]",{"range":"105","text":"106"},"Update the dependencies array to be: [mapProps, mapProps.clickedLngLat, radius]",{"range":"107","text":"108"},[1692,1701],"[addSource, curData, operation]",[1091,1122],"[mapProps, mapProps.clickedLngLat, radius]"]